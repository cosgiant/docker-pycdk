name: "🐳🔐📦 Docker Login and Pull Image"

on:
  workflow_call:
    inputs:
      image_registry:
        description: "ghcr.io or other package registry"
        required: true
        type: string
      image_name:
        description: "🖼️ The name of the Docker image to pull"
        required: true
        type: string
      image_tags:
        description: "🏷️ Comma-separated list of tags for the Docker image"
        required: true
        type: string
    secrets:
      GHCR_TOKEN:
        required: true

jobs:
  login_and_pull:
    runs-on: ubuntu-latest
    steps:      
      - name: "🔐🐳 Log in to the Container registry"
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ input.image_registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Extract metadata (tags, labels) for Docker"
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ input.image_registry }}/${{ input.image_name }}
          tags: |
            type=raw,value=${{input.image_registry}}/${{input.image_name}}:${{input.image_tags}}
            type=raw,value=${{input.image_registry}}/${{input.image_name}}:${{github.sha}}
            type=raw,value=${{input.image_registry}}/${{input.image_name}}:latest

  #type=raw,value=${{input.package_registry}}/${{input.image_name}}:${{env.PYCDK_VER}}
  # - ghcr.io/cosgiant/pycdk:2.155.0
  # - ghcr.io/cosgiant/pycdk:v2.155.0
  # - ghcr.io/cosgiant/pycdk:latest

  # - name: Build and push Docker image
  #   uses: docker/build-push-action@v6.7.0
  #   with:
  #     context: .
  #     push: true
  #     tags: ${{ steps.meta.outputs.tags }}
  #     labels: ${{ steps.meta.outputs.labels }}
  #     build-args: CDK_VERSION=${{ steps.get-ver.outputs.cdkver }}
#   - name: "🔐🐳 Docker login to ghcr registry"
#     run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: "📦🐳 Docker Pull from GitHub Container Registry"
        run: |
          IFS=',' read -r -a tags <<< "${{ inputs.image_tags }}"
          for tag in "${tags[@]}"; do
            echo "===> Pulling ${{ inputs.image_name }}:$tag"
            docker pull ${{ inputs.image_name }}:$tag
          done

      - name: "🖼️🐳 Docker Images"
        run: |
          echo "Docker images: ${{ inputs.image_name }}"
          docker images ${{ inputs.image_name }}
