name: "🐳🔐📦 Docker Login and Pull Image"

on:
  workflow_call:
    inputs:
      image_registry:
        description: "ghcr.io or other package registry"
        required: true
        type: string
      image_name:
        description: "🖼️ The name of the Docker image to pull"
        required: true
        type: string
      image_tags:
        description: "🏷️ Comma-separated list of tags for the Docker image"
        required: true
        type: string
    secrets:
      GHCR_TOKEN:
        required: true

# Set Global permissions
permissions:
  packages: read
  contents: read

jobs:
  login_and_pull:
    name: "🔐🐳📦 Docker Login and Pull Registry Image"
    runs-on: ubuntu-latest
    steps:
      - name: "🔐🐳 Log in to the Container registry: ${{ inputs.image_registry }}"
        id: docker_login_action
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ inputs.image_registry }}
          username: ${{ github.actor }}
          # username: USERNAME
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: "Extract metadata (tags, labels) for Docker: ${{ inputs.image_registry }}/${{ inputs.image_name }}"
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ inputs.image_registry }}/${{ inputs.image_name }}
          tags: |
            type=raw,value=${{inputs.image_tags}}
            type=raw,value=v${{inputs.image_tags}}

      - name: "🔐🐳 Docker sign in to registry: ${{ inputs.image_registry }}/${{ inputs.image_name }}:${{ inputs.image_tags }}"
        id: docker_login_cli
        run: |
          echo "🐳 Docker Login to ${{ inputs.image_registry }} Container Registry"
          echo "Calling Repository: ${{ github.repository }}"
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: "📦🐳 Docker Pull from Container Registry"
        id: docker_pull
        env:
          PYCDK_REPO: ${{ inputs.image_registry }}/${{ inputs.image_name }}
          PYCDK_VER: ${{ inputs.image_tags }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
        run: |
          echo "Parameters: $PYCDK_REPO:$PYCDK_VER"
          PYCDK_REPO_VER=$PYCDK_REPO:$PYCDK_VER
          echo "PYCDK_REPO_VER: $PYCDK_REPO_VER"
          
          echo "===> Metadata:"
          # # List available registry packages
          # echo "Listing available packages in the registry"
          # packages=$(gh api orgs/${{ github.repository_owner }}/packages?package_type=container --jq '.[] | @base64')
          # # Loop through each package to get its tags
          # echo "$packages" | while read -r package; do
          #   # Decode the base64 encoded JSON
          #   package=$(echo "$package" | base64 --decode)

          #   name=$(echo "$package" | jq -r '.name')
          #   package_type=$(echo "$package" | jq -r '.package_type')

          #   # Fetch tags for each package
          #   tags=$(gh api orgs/${{ github.repository_owner }}/packages/container/$name/versions --jq '.[].metadata.container.tags | join(", ")' 2>/dev/null || echo "No tags")

          #   # Print package details with tags
          #   echo "Package: $name"
          #   echo "Type: $package_type"
          #   echo "Tags: $tags"
          #   echo "----------------------"
          # done

          # echo "🐳📦 Docker Pull from GitHub Container Registry"
          # echo "===> Pulling: docker pull $PYCDK_REPO_VER"
          # docker pull $PYCDK_REPO_VER

          # IFS=',' read -r -a tags <<< "${{ inputs.image_tags }}"
          # for tag in "${tags[@]}"; do
          #   echo "===> Pulling ${{ inputs.image_name }}:$tag"
          #   echo "docker pull ${{ inputs.image_name }}:$tag"
          # done

      - name: "🖼️🐳 Docker Images"
        run: |
          echo "Docker images: ${{ inputs.image_name }}"
          docker images ${{ inputs.image_name }}
